// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See http://js.arcgis.com/3.20/esri/copyright.txt for details.
//>>built
define("esri/layers/vectorTiles/views/vectorTiles/WorkerTileHandler","require exports dojo/Deferred ../../core/promiseUtils ./WorkerTile ./style/StyleRepository".split(" "),function(m,n,g,f,h,k){return function(){function b(){this._tiles={};this._spriteInfo={};this._glyphInfo={}}b.prototype.reset=function(){var a=new g;this._spriteInfo={};this._glyphInfo={};var d=this._tiles,c;for(c in d){var b=d[c];b&&b.setObsolete()}this._tiles={};a.resolve();return a.promise};b.prototype.getLayers=function(){return this._layers};
b.prototype.setLayers=function(a){this._layers=(new k(a)).layers;return f.resolve({data:""})};b.prototype.getTile=function(a,b){var c=this,d=a.key,e=new h(a.key,a.refKey,this,a.rotation),l=a.cacheTile;return b.invoke("fetchTileData",a.refKey).then(function(a){return e.setDataAndParse(a.protobuff,b).then(function(a){l&&6!==e.status&&(c._tiles[d]=e);return a}).otherwise(function(a){e.setObsolete();return f.reject(a)})}).otherwise(function(a){e.setObsolete();c._tiles[e.tileKey]&&delete c._tiles[e.tileKey];
return f.reject(a)}).always(function(a){return a})};b.prototype.update=function(a){var b=this._tiles[a.key];return b?b.updateSymbols(a.rotation):f.reject()};b.prototype.destructTileData=function(a){this._tiles[a.key]&&delete this._tiles[a.key];return f.resolve()};b.prototype.fetchSprites=function(a,b){var c=[],d=this._spriteInfo;a.forEach(function(a){void 0===d[a]&&c.push(a)});return 0===c.length?f.resolve():b.invoke("getSprites",{sprites:c}).then(function(a){a=a.spriteItems;for(var b in a)d[b]=a[b]})};
b.prototype.getSpriteItems=function(){return this._spriteInfo};b.prototype.fetchGlyphs=function(a,b,c,g){var e=[],d=this._glyphInfo[b];d?c.forEach(function(a){d[a]||e.push(a)}):(d=this._glyphInfo[b]=[],c.forEach(function(a){return e.push(a)}));return 0===e.length?f.resolve():g.invoke("getGlyphs",{tileID:a,font:b,codePoints:e}).then(function(a){a=a.glyphItems;for(var b in a)d[b]=a[b]})};b.prototype.getGlyphItems=function(a){return this._glyphInfo[a]};return b}()});